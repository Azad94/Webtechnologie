#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{listings}
\usepackage{xcolor} 
\usepackage{babel} 
\usepackage{hyperref}
\usepackage{framed}
\usepackage{scrextend}

\definecolor{hellgrau}{rgb}{0.95,0.95,0.95}
\definecolor{colKeys}{rgb}{0,0,1}
\definecolor{colIdentifier}{rgb}{0,0,0}
\definecolor{colComments}{rgb}{1,0,0}
\definecolor{colString}{rgb}{0,0.5,0}

\lstset{
    language=JAVA,
    float=hbp,%
    basicstyle=\ttfamily\small, %
    identifierstyle=\color{colIdentifier}, %
    keywordstyle=\color{colKeys}, %
    stringstyle=\color{colString}, %
    commentstyle=\color{colComments}, %
    columns=flexible, %
    tabsize=2, %
    frame=single, %
    extendedchars=true, %
    showspaces=false, %
    showstringspaces=false, %
    numbers=left, %
    numberstyle=\tiny, %
    breaklines=true, %
    backgroundcolor=\color{hellgrau}, %
    breakautoindent=true, %
    captionpos=b%
}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
\end_modules
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family sfdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 10
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Title
SnakeDart
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename /Users/nane/github/dartsnake/web/img/background.png
	lyxscale 25
	scale 25

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
Referenzspiel und -dokumentation für das Modul 
\begin_inset Quotes eld
\end_inset

Webtechnologie Projekt
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
Prof.
 Dr.
 Nane Kratzke
\end_layout

\begin_layout Standard
\noindent
\align center
SoSe 2016
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand lstlistoflistings

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Einleitung
\end_layout

\begin_layout Standard
Am Beispiel einer Spielentwicklung sollen sie eine Auswahl relevanter Webtechnol
ogien wie bspw.

\series bold
 HTML
\series default
, 
\series bold
DOM-Tree
\series default
, 
\series bold
HTTP
\series default
 Protokoll, 
\series bold
REST
\series default
-Prinzip sowie die Trennung in 
\series bold
client
\series default
- und 
\series bold
serverseitige
\series default
 
\series bold
Logik
\series default
 spielerisch kennenlernen.
 Das Spiel selber ist dabei weitesgehend clientseitig zu realisieren und
 soll nur für die Speicherung von Spielzuständen, wie bspw.
 Highscores, auf REST-basierte Services zugreifen.
 Selbst ohne Storagekomponente soll ihr Spiel spielbar sein (einzig und
 allein das Speichern von Spielzuständen ist natürlich eingeschränkt).
\end_layout

\begin_layout Standard
Bei der Suche nach geeigneten Spielideen lohnt es sich immer mal wieder
 bei alten Arcade Klassikern wie Tetris, Space Invader, Pong, etc.
 zu suchen und sich inspirieren zu lassen.
 Um Komplexität und Aufwand im Griff zu behalten, ist ihnen eine REST-basierte
 Storagekomponente vorgegeben.
 Sie sollen diese nur in Dart nachimplementieren.
 Ferner soll ihr Spiel dabei auf einem zweidimensionalen Raster basieren
 und keinen Canvas zur Darstellung nutzen.
 Sie sollen ein Single Player Game schreiben.
 Um die Komplexität im Rahmen zu halten, sollten sie daher mit Ansätzen
 vorsichtig sein, die auf Multi Player Games beruhen und Player durch 
\begin_inset Quotes eld
\end_inset

künstliche Intelligenzen
\begin_inset Quotes erd
\end_inset

 ersetzen.
 Dies kann sehr schnell zu erheblicher Komplexität führen, denken Sie nur
 mal an Schach!
\end_layout

\begin_layout Standard
Ihr Spiel soll dabei auf den Einsatz von Canvas verzichten, sondern ausschließli
ch auf DOM-Tree Manipulationen beruhen, um den Spielzustand darzustellen.
 Das Spiel sollte daher auf einem einfach 2D Raster spielbar sein
\begin_inset Foot
status open

\begin_layout Plain Layout
Das Raster soll dabei nicht zu groß werden.
 Im Extrem könnten sie ansonsten 1 Pixel große Felder definieren und sich
 künstlich ein Canvas Element 
\begin_inset Quotes eld
\end_inset

nachbauen
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_inset

.
 Zum einen reduziert dies die Komplexität möglicher Spielkonzepte, zum anderen
 sollen sie durch die Aufgabenstellung dazu gezwungen werden, sich intensiv
 mit dem DOM-Tree eines HTML-Dokuments und dessen clientseitiger Manipulation
 auseinander setzen.
 Dies würden sie nicht, wenn Sie Canvas nutzen würden (sie würden dann sich
 intensiv mit Grafikbibliotheken und ggf.
 Game Engines auseinandersetzen, das ist jedoch nicht Ziel dieser Veranstaltung
\begin_inset Foot
status open

\begin_layout Plain Layout
Wenn Sie so etwas interessiert überlegen Sie das Wahlpflichtmodul 
\begin_inset Quotes eld
\end_inset

Game Programming
\begin_inset Quotes erd
\end_inset

 des Studiengangs ITD zu belegen.
\end_layout

\end_inset

).
\end_layout

\begin_layout Standard
Sie werden sehen, dass sich einfache bis mittelkomplexe Spiele auch mit
 absoluten Web-Basistechnologien, die jeder moderne Webbrowser anbietet,
 realisieren lassen.
 Ich hoffe sie erhalten dadurch ein besseres Gefühl zwischen der Trennung
 von client- und serverseitiger Logik, sowie was mit Webtechnologien grundsätzli
ch alles machbar ist.
\end_layout

\begin_layout Standard
Hinweise für die Durchführung ihres Webtechnologie Projekts sind in vorliegender
 Dokumentation in folgender Form gekennzeichnet.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis:} Solche Boxen kennzeichnen Hinweise für ihr Webtechnologie-Proje
kt.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Es gilt z.B.
 der folgende Hinweis:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis:} Vorliegende Dokumentation erläutert einerseits den Aufbau
 eines Beispielspiels (SnakeGame).
 In zweiter Funktion dient die Dokumentation gleichermaßen als Anhalt für
 Sie, um Ihr eigenständig entwickeltes Spiel nachvollziehbar zu dokumentieren.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Diese Dokumentation erläutert die durch Ihr Spiel zu erfüllenden Anforderungen
 und das Beispielspielkonzept des Beispielgames 
\series bold
SnakeGame
\series default
 im Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Anforderungen-und-abgeleitetes-Konzept"

\end_inset

.
 Die Umsetzung des Spielkonzepts in eine Model-View-Controller basierte
 Architektur wird im Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Architektur-und-Implementierung"

\end_inset

 dargestellt.
 In diesem Kapitel wird auch die REST-basierte Storagekomponente erläutert,
 die die klassische MVC-Architektur um eine Storagekomponente erweitert.
 Exemplarisch wird ferner der sinnvolle Einsatz von UML-Diagrammen gezeigt,
 um angewendete Gestaltungsprinzipien der Software zu veranschaulichen.
 Das Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Level--und-Parametrisierungskonzept"

\end_inset

 befasst sich mit dem Einsatz von deskriptiven Dateiformaten, um Spiellevel
 und Spielparameter zu definieren.
 Auf den ersten Blick wirkt dies nach Mehraufwand.
 Sie werden jedoch sehen, dass es durchaus Sinn machen kann, Parameter nicht
 hardcodiert im Spiel einzubauen, sondern diese in externe Konfigurationsformate
 auszulagern.
 Insbesondere in der Schlussphase werden sie es ggf.
 zu schätzen wissen, dass Sie Spielparameter unabhängig vom Code ändern
 können, um die Spielbarkeit ihres Spiels zu optimieren.
 Im Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Nachweis-der-Anforderungen"

\end_inset

 geht es um den Nachweis der Anforderungen, den sie systematisch (wenn auch
 aufgrund der Kürze der Zeit im wesentlichen nur argumentativ) Anforderung
 für Anforderung erbringen sollen.
 Es bietet sich an, dies nicht erst am Ende ihrer Spieleentwicklung zu machen,
 sondern begleitend.
 
\series bold
Insbesondere da dieses Kapitel sehr viele und relevante Informationen enthält,
 die im Rahmen der Notenfindung herangezogen werden.
\end_layout

\begin_layout Standard
Auch wenn es nur ein kleines Spiel ist, das sie entwickeln sollen, werden
 sie im Verlaufe dieses Projekts die typischen Phasen der Softwareentwicklung
 von der Anforderungserhebung, über Architektur und Implementierung bis
 zur Nachweisführung durchlaufen und dokumentieren.
\end_layout

\begin_layout Standard
Ich wünsche Ihnen nun viel Erfolg und Spaß bei der Entwicklung ihres Webgames.
 Die besten Spiele der vergangenen Jahre finden Sie in einer Hall-of-Fame
 unter folgendem Link 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{http://www.nkode.io/assets/webtech-hall-of-fame/index.html}
\end_layout

\end_inset

.
 Auch ihr Spiel kann in diese Hall-of-Fame eintreten.
 Dafür gelten die folgenden Regeln:
\end_layout

\begin_layout Enumerate
Ihr Team muss das Modul mit einer guten oder sehr guten Note abschließen.
\end_layout

\begin_layout Enumerate
Sie müssen erlauben, dass ihr Spiel der Öffentlichkeit zur Verfügung gestellt
 werden darf.
\end_layout

\begin_layout Enumerate
Die fünf besten Spiele werden in der Google+ Dartisans Community zu einer
 öffentlichen Abstimmung eingestellt.
\end_layout

\begin_layout Enumerate
Die Google+ Dartisans Community stimmt über die besten Spiele ab.
 
\end_layout

\begin_layout Enumerate
Die drei best bewerteten Spiele (Stimmenanzahl) werden in die "Hall of Fame"
 aufgenommen.
 
\end_layout

\begin_layout Enumerate
Das 
\series bold
\bar under
beste Spiel
\series default
\bar default
 des Semesters erhält einen 
\series bold
\bar under
Notenbonus
\series default
\bar default
.
\end_layout

\begin_layout Section
Anforderungen und abgeleitetes Spielkonzept
\begin_inset CommandInset label
LatexCommand label
name "sec:Anforderungen-und-abgeleitetes-Konzept"

\end_inset


\end_layout

\begin_layout Standard
Im Verlaufe des Webtechnologie Projekts sollen Sie ein clientseitiges Spiel
 entwickeln, welches in einem Webbrowser spielbar sein soll.
 Das Spiel kann sich softwaretechnisch am hier dokumentierten 
\series bold
SnakeGame
\series default
 (Github: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://github.com/nkratzke/dartsnake}
\end_layout

\end_inset

) orientieren.
 Sie sollen jedoch ein eigenständiges Spielkonzept entwickeln und umsetzen.
\end_layout

\begin_layout Subsection
Anforderungen
\end_layout

\begin_layout Standard
Ihr Spiel soll folgende Anforderungen erfüllen.
 Sie sollen dabei nachvollziehbar dokumentieren, wie diese Anforderungen
 durch ihre Realisierung umgesetzt werden.
 Das Spiel soll folgende in Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:Anforderungen"

\end_inset

 aufgeführten 
\series bold
funktionalen Anforderungen
\series default
, 
\series bold
Dokumentationsanforderungen
\series default
 und 
\series bold
technischen Randbedingungen
\series default
 erfüllen.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="27" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="10col%">
<column alignment="left" valignment="top" width="80col%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Id
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Kurztitel
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Anforderung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Einplayer Game
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel soll ein Einplayer Game sein 
\emph on
(Mehrplayer Konzepte können als Einplayer Game realisiert werden, wenn Spieler
 durch 
\begin_inset Quotes eld
\end_inset

künstliche Intelligenzen
\begin_inset Quotes erd
\end_inset

 gesteuert werden.
 Beachten Sie dabei bitte, dass abhängig vom Spielkonzept die Komplexität
 des Spiels erheblich steigt, denken sie bspw.
 an Schach.
 Es bietet sich an, sich von alten Arcade Klassikern inspieren zu lassen.)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
2D Game
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel soll konzeptionell auf einem 2D-Raster basieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Levelkonzept
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel sollte ein Levelkonzept vorsehen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Parametrisier-ungskonzept
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel sollte ein Parameterisierungskonzept für relevante Spielparameter
 vorsehen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
REST-basierter Storage
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel soll auf einen JSON-basierte Storageservice zugreifen können,
 um Spielzustände (z.B.
 Highscores und ähnliches) speichern zu können.
 Das Spiel muss bei nicht erreichbarem Storage-Service (Gamekey Service)
 weiterhin spielbar sein.
 Einzig und allein die Speicherfunktionalitäten dürfen natürlich eingeschränkt
 sein.

\emph on
 (Für den Storage-Service (Gamekey-Service) gibt es eine Referenz-Implementierun
g: 
\emph default

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://bitbucket.org/nanekratzke/gamekey}
\end_layout

\end_inset


\emph on
)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-6
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Desktop Browser
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel muss in Desktop Browsern spielbar sein.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-7
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Mobile Browser
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel muss auf SmartPhone Browsern spielbar sein.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Dokumentationsanforderungen
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
D-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Dokumenta-tionsvorlage
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Die Dokumentation soll sich an vorliegender Vorlage orientieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
D-2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Projekt-dokumentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel muss geeignet dokumentiert sein, so dass es von projektfremden
 Personen fortgeführt werden könnte.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
D-3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Quelltext-dokumentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Der Quelltext des Spiels muss geeignet dokumentiert sein und mittels schriftlich
er Dokumentation erschließbar und verständlich sein.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
D-4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Libraries
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Alle verwendeten Libraries sind aufzuführen und deren Notwendigkeit zu begründen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Technische Randbedingungen
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No Canvas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Die Darstellung des Spielfeldes sollte ausschließlich mittels DOM-Tree Techniken
 erfolgen.
 Die Nutzung von Canvas-basierten Darstellungstechniken ist 
\series bold
\bar under
explizit
\series default
\bar default
 untersagt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Levelformat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Level sollten sich mittels deskriptiver Textdateien definieren lassen (z.B.
 mittels CSV, JSON, XML, etc.), so dass Level-Änderungen ohne Sourcecode-Änderung
en des Spiels realisierbar sind.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Parameterformat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Spielparameter sollten sich mittels deskriptiver Textdateien definieren
 lassen (z.B.
 mittels CSV, JSON, XML, etc.), so dass Parameter-Änderungen ohne Sourcecode-Ände
rungen des Spiels realisierbar sind.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HTML + CSS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Der View des Spiels darf ausschließlich mittels HTML und CSS realisiert
 werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Gamelogic in Dart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Die Logik des Spiels muss mittels der Programmiersprache Dart realisiert
 werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Storagelogic in Dart 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Der Storageservice muss REST-basiert sein und mittels der Programmiersprache
 Dart realisiert werden.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Storage Referenz
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel soll gleichermaßen mit der Referenzimplementierung des Storageservice
 als auch der Eigenrealisierung des Storageservice funktionieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Storage Referenztest
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Die Eigenrealisierung des Storageservices muss den Referenztest der Referenzimpl
ementierung implementieren.
 
\emph on
(Nicht erfolgreiche Testfälle sind explizit auszuweisen, zu dokumentieren
 und zu begründen!)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Browser Support
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel muss im Browser Chromium/Dartium (native Dart Engine) funktionieren.
 Das Spiel muss ferner in allen anderen Browserrn (JavaScript Engines) ebenfalls
 in der JavaScript kompilierten Form funktionieren (geprüft wird ggf.
 mit Safari, Chrome und Firefox).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
MVC Architektur
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel sollte einer MVC-Architektur folgen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Erlaubte Pakete
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Erlaubt sind alle dart:* packages, sowie das Webframework start.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Verbotene Pakete
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Verboten sind Libraries wie Polymer oder Angular.
 
\emph on
(Sollten Sie Pakete verwenden wollen, die außerhalb der erlaubten Pakete
 liegen, holen Sie sich das Go ab, begründen sie bitte, wieso sie das Paket
 benötigen).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-13
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No Sound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel muss keine Sounds unterstützen.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Anforderungen
\begin_inset CommandInset label
LatexCommand label
name "tab:Anforderungen"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Spielkonzept des Snake Games
\begin_inset CommandInset label
LatexCommand label
name "sec:Spielkonzept-des-Snake-Game"

\end_inset


\end_layout

\begin_layout Standard
Das SnakeGame dient im wesentlichen als Anschauungsgegenstand für Sie und
 deckt wesentliche (aber nicht alle) aufgestellten Anforderungen (vgl.
 Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Nachweis-der-Anforderungen"

\end_inset

) ab.
 Konzeptionell basiert es auf einem quadratischen n x n Spielfeld, auf dem
 sich eine Maus (O) und eine Schlange (X) wachsender Länge befindet.
 Ein Spieler kann eine Schlange (X) über das Spielfeld mittels Betätigen
 von Cursortasten bewegen.
 Ziel der Schlange ist es, möglichst viele Mäuse zu fangen.
 Hierzu muss der Spieler die Schlange zu einer Maus bewegen.
 Berührt der Kopf der Schlange die Maus, frisst die Schlange die Maus und
 die Schlange wird um ein Element länger.
 Es wird in diesem Fall per Zufall eine neue Maus auf dem Spielfeld erzeugt.
 Das Spiel wird mit jeder gefressenen Maus schwieriger, denn
\end_layout

\begin_layout Itemize
die Länge der Schlange erhöht sich mit jeder gefressenen Maus um eins,
\end_layout

\begin_layout Itemize
die Geschwindigkeit der Schlange erhöht sich ebenfalls mit jeder gefressenen
 Maus.
\end_layout

\begin_layout Standard
Die Schlange kann sich dabei nur vorwärts bewegen (d.h.
 nicht nach hinten kriechen oder zu einer der beiden Seiten rollen).
 Die Steuerung der Schlange wirkt nur auf den Kopf.
 Die restlichen Elemente des Schlangenkörpers folgen einander.
\end_layout

\begin_layout Standard
Das Spiel ist beendet, wenn einer der beiden folgenden GameOver Bedingungen
 eintreten:
\end_layout

\begin_layout Itemize
Die Schlange 
\begin_inset Quotes eld
\end_inset

verknotet
\begin_inset Quotes erd
\end_inset

 sich (d.h.
 mindestens zwei Elemente des Schlangenkörpers liegen auf demselben Element
 des Spielfeldes, vgl.
 Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Spielprinzip-von-SnakeGame"

\end_inset

(b))
\end_layout

\begin_layout Itemize
Die Schlange verlässt das Spielfeld (d.h.
 mindestens ein Element der Schlange befindet sich außerhalb des Spielfeldes,
 vgl.
 Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Spielprinzip-von-SnakeGame"

\end_inset

(c)).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="7">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Spielfeld
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="7">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\bar under
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Verknotete Schlange
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="7">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
O
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\bar under
X
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Schlange außerhalb des Spielfeldes
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Spielprinzip von SnakeGame 
\begin_inset CommandInset label
LatexCommand label
name "fig:Spielprinzip-von-SnakeGame"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
SnakeGame kann auf vielfältige Arten variiert werden.
 Z.B.
 könnte
\end_layout

\begin_layout Itemize
mit mehr als einer Maus gespielt werden,
\end_layout

\begin_layout Itemize
Mäuse könnten sich bewegen,
\end_layout

\begin_layout Itemize
Mäuse könnten ihre Geschwindigkeit variieren,
\end_layout

\begin_layout Itemize
ein Teil der Mäuse könnte Tollwut haben (vergiftet sein, neue Game Over
 Bedingung)
\end_layout

\begin_layout Itemize
usw.
\end_layout

\begin_layout Standard
Die nachfolgende Architektur ist so gestaltet, dass solche Variationen nachträgl
ich ergänzt werden könnten.
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Section
Architektur und Implementierung
\begin_inset CommandInset label
LatexCommand label
name "sec:Architektur-und-Implementierung"

\end_inset


\end_layout

\begin_layout Standard
Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Architektur"

\end_inset

 zeigt die Architektur von SnakeGame im Überblick.
 Die Architektur folgt dem bewährten Model-View-Controller Prinzip, ist
 jedoch um eine REST-basierte Storage Anbindung ergänzt.
 Softwaretechnisch gliedert sich die Spiellogik so in mehrere Komponenten
 (Klassen) mit spezifischen funktionalen Verantwortlichkeiten.
 Eine zentrale Rolle für die Spielsteuerung hat der Controller (Klasse 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
).
 Der Controller kann
\end_layout

\begin_layout Itemize
Nutzerinteraktionen (insbesondere Betätigen von Cursortasten) sowie
\end_layout

\begin_layout Itemize
Zeitsteuerung (insbesondere einen Trigger zur Bewegung der Schlange und
 einen Trigger zur Bewegung der Mäuse)
\end_layout

\begin_layout Standard
erkennen und in entsprechende Modelinteraktionen umsetzen.
 Der Controller wird detailliert im Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Controller"

\end_inset

 erläutert.
\end_layout

\begin_layout Standard
Der 
\family typewriter
\series bold
SnakeView
\family default
\series default
 kapselt den DOM-Tree und bietet entsprechende Manipulationsmethoden für
 den Controller an, um sich verändernde Spielzustände im Browser zur Anzeige
 zu bringen.
 Der View wird im Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:View"

\end_inset

 erläutert.
 
\end_layout

\begin_layout Standard
Konzeptionell wird SnakeGame in einem Model abgebildet.
 Das Model ist komplexer und gliedert sich in mehrere logische Entities,
 die sich aus dem Spielkonzept des Abschnitts 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Spielkonzept-des-Snake-Game"

\end_inset

 ableiten und im Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Model"

\end_inset

 erläutert werden.
 
\end_layout

\begin_layout Standard
Zur Speicherung von Spielzuständen (bei SnakeGame nur Speicherung von Highscores
) kann der Controller auf eine sogenannte Gamekey API zurürckgreifen.
 Die Gamekey API kapselt in Form der Klasse 
\family typewriter
\series bold
GameKey
\family default
\series default
 eine REST basierte Schnittstelle eines externen Gamekey Service.
 Mittels des Gamekey Service ist es möglich, Spielzustände eines Spiels
 in Form von JSON zu speichern und abzufragen.
 Der Gamekey Service und seine Anbindung wird im Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:REST-basierter-Storage"

\end_inset

 erläutert.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis:} Der Gamekey Service kann von beliebigen Spielen genutzt
 werden, um Spielzustände in einem JSON Format zu speichern.
 D.h.
 auch Sie sollen Ihr Spiel an den Gamekey Service anbinden.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Architektur.pdf
	width 66text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Architektur
\begin_inset CommandInset label
LatexCommand label
name "fig:Architektur"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Model
\begin_inset CommandInset label
LatexCommand label
name "sub:Model"

\end_inset


\end_layout

\begin_layout Standard
Aus dem Spielkonzept des Abschnitts 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Spielkonzept-des-Snake-Game"

\end_inset

 wurden eine Schlange (
\family typewriter
\series bold
Snake
\family default
\series default
) und eine Maus Entity (
\family typewriter
\series bold
Mouse
\family default
\series default
) abgeleitet.
 Ein Spiel (
\family typewriter
\series bold
SnakeGame
\family default
\series default
) besteht dabei aus einer Schlange (
\family typewriter
\series bold
Snake
\family default
\series default
, vgl.
 Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Snake-Entity"

\end_inset

) und mindestens einer Maus (
\family typewriter
\series bold
Mouse
\family default
\series default
, vgl.
 Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Mouse-Entity"

\end_inset

).
 Das Klassendiagramm des Models ist in Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassendiagramm-(MC)"

\end_inset

 gezeigt.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis:} Aufgrund der geringen Komplexität des SnakeGame (deswegen
 wurde es als Anschauungsgegenstand gewählt) ist das Model sehr übersichtlich.
 Es ist unwahrscheinlich, dass ihr Model ähnlich 'klein' ausfallen wird
 (es sei denn sie wählen ein Spiel geringer Komplexität und beabsichtigen
 nicht das 
\backslash
textbf{Notenspektrum} nach oben hin auszunutzen).
 Üblicherweise hat das Model den größten Codeumfang, was logisch ist, denn
 hier wird ja die Spiellogik realisiert.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Klassendiagram-Controller-Model.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Klassendiagramm (Model und Controller)
\begin_inset CommandInset label
LatexCommand label
name "fig:Klassendiagramm-(MC)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection

\family typewriter
SnakeGame
\end_layout

\begin_layout Standard
Der Controller interagiert dabei nur mit dem 
\family typewriter
\series bold
SnakeGame
\family default
\series default
 und nicht mit dahinter liegenden Entities.
 Auf diese Weise ist es möglich, das Spiel um weitere Entities oder Entityvarian
ten zu erweitern, ohne dass der Controller geändert werden müsste.
 Das 
\family typewriter
\series bold
SnakeGame
\family default
\series default
 kann dabei über folgende Attribute dem Controller Aufschluss über den aktuellen
 Spielzustand geben:
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
size
\family default
\series default
 liefert die quadratische Spielfeldgröße in Feldern.
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
level
\family default
\series default
 bezeichnet den aktuellen Level, in dem sich das Spiel zum Zeitpunkt der
 Abgabe befindet (dies wird bislang im SnakeGame nicht genutzt).
\end_layout

\begin_layout Itemize
Mittels 
\family typewriter
\series bold
stopped
\family default
\series default
 und 
\family typewriter
\series bold
running
\family default
\series default
 kann in Erfahrung gebracht werden, ob das Spiel gerade läuft oder gestoppt
 ist (mittels 
\family typewriter
\series bold
stopped
\family default
\series default
 wäre so z.B.
 eine Pause Funktionalität möglich, die bislang ebenfalls nicht genutzt
 wird).
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
gameOver
\family default
\series default
 gibt darüber Aufschluss, ob eine der definierten Game Over Bedingungen
 (verknotete Schlange, Schlange nicht mehr auf Spielfeld) eingetreten ist.
\end_layout

\begin_layout Itemize
Der 
\family typewriter
\series bold
miceCounter
\family default
\series default
 gibt an, wieviele Mäuse die Schlange bereits gefressen hat.
\end_layout

\begin_layout Standard
Ein 
\family typewriter
\series bold
SnakeGame
\family default
\series default
 Objekt 
\end_layout

\begin_layout Itemize
kann mittels des Konstruktors erzeugt werden.
 Dabei wird die Spielfeldgröße (Default 30 x 30) übergeben.
\end_layout

\begin_layout Itemize
Der Controller kann dem Model mittels 
\family typewriter
\series bold
moveSnake()
\family default
\series default
 und 
\family typewriter
\series bold
moveMice()
\family default
\series default
 mitteilen, dass die Schlange bzw.
 alle Mäuse sich um einen Schritt bewegen sollen.
\end_layout

\begin_layout Itemize
Mittels 
\family typewriter
\series bold
addMouse()
\family default
\series default
 kann eine zusätzliche Maus dem Spiel hinzugefügt werden.
 Normalerweise sollte dies innerhalb des Models geschehen.
 Denkbar sind jedoch auch für Spielerweiterungen und Varianten besondere
 Ereignisse, die vom Controller erkannt werden (z.B.
 ein 
\begin_inset Quotes eld
\end_inset

Es regnet Mäuse Event
\begin_inset Quotes erd
\end_inset

), die in 
\family typewriter
\series bold
addMouse()
\family default
\series default
 Aufrufe durch den Controller umgesetzt werden könnten.
 Dies wird jedoch im aktuellen Implementierungsstand des SnakeGame nicht
 genutzt.
\end_layout

\begin_layout Itemize
Mittels der Methode 
\family typewriter
\series bold
increaseMiceCounter()
\family default
\series default
 kann mitgezählt werden, wieviel Mäuse die Schlange bereits gefressen hat.
 Sie wird von der 
\family typewriter
\series bold
move()
\family default
\series default
 Methode der 
\family typewriter
\series bold
Snake
\family default
\series default
 Klasse aufgerufen, wenn erkannt wurde, dass eine Maus gefressen wurde.
\end_layout

\begin_layout Subsubsection

\family typewriter
Snake
\family default
 Entity
\begin_inset CommandInset label
LatexCommand label
name "sub:Snake-Entity"

\end_inset


\end_layout

\begin_layout Standard
Der Zustand einer Schlange (
\family typewriter
\series bold
Snake
\family default
\series default
) besteht aus einer Liste von Body Elementen (
\family typewriter
\series bold
body
\family default
\series default
 der Schlange).
 Der erste Eintrag dieser Liste bezeichnet den Kopf (
\family typewriter
\series bold
head
\family default
\series default
), der letzte Eintrag das Ende (
\family typewriter
\series bold
tail
\family default
\series default
) der Schlange.
 Jedes einzelne body Element wird dabei als Map ausgedrückt.
 Eine Schlange ist eine Liste solcher (aufeinander folgender) Elemente:
\end_layout

\begin_layout LyX-Code
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[caption=Codierung eines Schlangenkörperelements,label=snakebod
y]
\end_layout

\begin_layout Plain Layout

{
\end_layout

\begin_layout Plain Layout

	'row' : int, // Zeile
\end_layout

\begin_layout Plain Layout

	'col' : int  // Spalte
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Bewegungsrichtung des Kopfs der Schlange wird mittels der Attribute
 
\family typewriter
\series bold
dr
\family default
\series default
 (Bewegung entlang der Zeile, row direction 
\begin_inset Formula $dr\in\{-1,0,1\}$
\end_inset

) und 
\family typewriter
\series bold
dc
\family default
\series default
 (Bewegung entlang der Spalte, column direction 
\begin_inset Formula $dc\in\{-1,0,1\}$
\end_inset

) ausgedrückt.
 Das berechnete Attribute 
\family typewriter
\series bold
tangled
\family default
\series default
 gibt an, ob die Schlange verknotet (Game Over Bedingung) ist.
 Die berechneten Attribute 
\family typewriter
\series bold
(not)OnField
\family default
 
\series default
geben an, ob die Schlange sich noch auf dem Spielfeld befindet (weitere
 Game Over Bedingung).
\end_layout

\begin_layout Standard
Mittels der Methoden
\series bold
 
\family typewriter
headUp()
\family default
\series default
, 
\family typewriter
\series bold
headDown()
\family default
\series default
, 
\family typewriter
\series bold
headLeft()
\family default
\series default
 und 
\family typewriter
\series bold
headRight()
\family default
\series default
 kann der Schlange die Bewegungsrichtung (nach oben, nach unten, nach links,
 nach rechts) vorgegeben werden, in die sie sich im nächsten Schritt (und
 allen folgenden) zu bewegen hat.
 
\end_layout

\begin_layout Standard
Mittels der 
\family typewriter
\series bold
move()
\family default
\series default
 Methode wird die Schlange veranlasst ihren nächsten Schritt zu machen.
 Innerhalb der 
\family typewriter
\series bold
move()
\family default
\series default
 Methode wird geprüft, ob sie dabei eine Maus erwischt hat und diese fressen
 kann.
 
\end_layout

\begin_layout Subsubsection

\family typewriter
Mouse
\family default
 Entity
\begin_inset CommandInset label
LatexCommand label
name "sub:Mouse-Entity"

\end_inset


\end_layout

\begin_layout Standard
Der Zustand einer Maus (
\family typewriter
\series bold
Mouse
\family default
\series default
) besteht aus
\end_layout

\begin_layout Itemize
der aktuellen Zeile (
\family typewriter
\series bold
row
\family default
\series default
),
\end_layout

\begin_layout Itemize
der aktuellen Spalte (
\family typewriter
\series bold
col
\family default
\series default
) auf dem sich die Maus befindet,
\end_layout

\begin_layout Itemize
Bewegung entlang der Zeile, row direction 
\family typewriter
\series bold
dr
\family default
\series default
 
\begin_inset Formula $\in\{-1,0,1\}$
\end_inset

) und 
\end_layout

\begin_layout Itemize
Bewegung entlang der Spalte, column direction 
\family typewriter
\series bold
dc
\family default
\series default
 
\begin_inset Formula $\in\{-1,0,1\}$
\end_inset

).
\end_layout

\begin_layout Standard
Das berechnete Attribut 
\family typewriter
\series bold
pos
\family default
\series default
 ergibt sich aus 
\family typewriter
\series bold
row
\family default
\series default
 und 
\family typewriter
\series bold
col
\family default
\series default
, die als Map in demselben Format zurückgegeben werden, wie auch Schlangenkörper
elemente (vgl.
 Listing 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{snakebody}
\end_layout

\end_inset

) codiert werden.
\end_layout

\begin_layout Standard
Ein Mausobjekt kann mittels des Konstruktors 
\family typewriter
\series bold
Mouse.staticOn()
\family default
\series default
 als sich nicht bewegende Maus (
\family typewriter
\series bold
dr
\family default
=0
\series default
 und 
\family typewriter
\series bold
dc
\family default
=0
\series default
) und mittels des Konstruktors 
\family typewriter
\series bold
Mouse.movingOn()
\family default
\series default
 als sich zufällig in eine Richtung bewegende Maus erzeugt werden.
 
\end_layout

\begin_layout Standard
Mittels der Methode 
\family typewriter
\series bold
move()
\family default
\series default
 kann einer Maus mitgeteilt werden, dass sie den nächsten Schritt machen
 soll.
 Die Methode sorgt ferner dafür, dass die Maus auf dem Spielfeld bleibt,
 indem sie bei Berührung des Spielfeldrands den entsprechend 
\series bold
dr
\series default
 oder 
\series bold
dc
\series default
 in die andere Richtung dreht.
\end_layout

\begin_layout Subsection
View
\begin_inset CommandInset label
LatexCommand label
name "sub:View"

\end_inset


\end_layout

\begin_layout Standard
Der View dient der Darstellung des Spiels für den Spieler.
 Er besteht im Kern aus einem HTML-Dokument (siehe Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:HTML-Dokument"

\end_inset

) und einer clientseitigen Logik, die den DOM-Tree des HTML-Dokuments manipulier
t (siehe Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:SnakeView"

\end_inset

).
\end_layout

\begin_layout Subsubsection
HTML-Dokument
\begin_inset CommandInset label
LatexCommand label
name "sub:HTML-Dokument"

\end_inset


\end_layout

\begin_layout Standard
Der View wird im Browser initial durch folgendes HTML-Dokument erzeugt.
 Im Verlaufe des Spiels wird der DOM-Tree dieses HTML-Dokuments durch die
 Klasse 
\family typewriter
\series bold
SnakeView
\family default
\series default
 manipuliert (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassendiagramm-(VC)"

\end_inset

), um den Spielzustand darzustellen und Nutzerinteraktionen zu ermöglichen.
 Die Klasse 
\family typewriter
\series bold
SnakeView
\family default
\series default
 wird dabei durch das Script 
\family typewriter
\series bold
snakeclient.dart 
\family default
\series default
als clientseitige Logik geladen.
\end_layout

\begin_layout LyX-Code
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}[caption=HTML Basisdokument des Spiels]
\end_layout

\begin_layout Plain Layout

<html>   
\end_layout

\begin_layout Plain Layout

  <head>   	
\end_layout

\begin_layout Plain Layout

    [...]     
\end_layout

\begin_layout Plain Layout

    <title>Snake Dart</title>     
\end_layout

\begin_layout Plain Layout

    <link rel="stylesheet" type="text/css" href="style.css">     
\end_layout

\begin_layout Plain Layout

  </head>     
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

  <body>
\end_layout

\begin_layout Plain Layout

    <div id="warningoverlay"></div>
\end_layout

\begin_layout Plain Layout

    <div id="overlay"></div>
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

    <div class="container">       
\end_layout

\begin_layout Plain Layout

       <h1 id="title">Snake Dart</h1>              
\end_layout

\begin_layout Plain Layout

       <div id='welcome'>         
\end_layout

\begin_layout Plain Layout

         <div id='highscore'></div>         
\end_layout

\begin_layout Plain Layout

         <span id="start">Start</span>      
\end_layout

\begin_layout Plain Layout

       </div>              
\end_layout

\begin_layout Plain Layout

       <div id='message'>         
\end_layout

\begin_layout Plain Layout

         <div id='gameover'></div>         
\end_layout

\begin_layout Plain Layout

         <div id='reasons'></div>       
\end_layout

\begin_layout Plain Layout

       </div>
\end_layout

\begin_layout Plain Layout

      
\end_layout

\begin_layout Plain Layout

       <table id='snakegame'></table>              
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

       <div id='controls'>         
\end_layout

\begin_layout Plain Layout

         <span id='points'></span>       
\end_layout

\begin_layout Plain Layout

       </div>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	   [...]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   </div>
\end_layout

\begin_layout Plain Layout

   
\end_layout

\begin_layout Plain Layout

   <script type='application/dart' src='snakeclient.dart'></script>     
\end_layout

\begin_layout Plain Layout

   <script src='packages/browser/dart.js'></script>      
\end_layout

\begin_layout Plain Layout

  </body>
\end_layout

\begin_layout Plain Layout

</html> 
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dieses HTML-Dokument wird genutzt, um darin das Spiel einzublenden.
 Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Screenshots-des-SnakeGames"

\end_inset

 zeigt dabei zwei typische Screenshots.
 
\end_layout

\begin_layout Subsubsection

\family typewriter
SnakeView
\family default
 als Schnittstelle zum HTML-Dokument
\begin_inset CommandInset label
LatexCommand label
name "sub:SnakeView"

\end_inset


\end_layout

\begin_layout Standard
Folgende Elemente haben dabei eine besondere Bedeutung und können dabei
 über entsprechende Attribute der Klasse 
\family typewriter
\series bold
SnakeView
\family default
\series default
 (siehe Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassendiagramm-(VC)"

\end_inset

) angesprochen werden.
\end_layout

\begin_layout Itemize
Das Element mit dem Identifier 
\family typewriter
\series bold
#warningoverlay
\family default
\series default
 wird genutzt, um generelle Warnungen einzublenden (bspw.
 dass keine Verbindung zum Gamekey Service aufgebaut werden konnte).
\end_layout

\begin_layout Itemize
Das Element mit dem Identifier 
\family typewriter
\series bold
#overlay
\family default
\series default
 bezeichnet eine Overlay Ebene.
 Diese wird mittels CSS absolut positioniert und dient insbesondere dazu,
 dass Highscore Speicherformular des Games einzublenden (vgl.
 Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Screenshots-des-SnakeGames"

\end_inset

, linker Screenshot).
\end_layout

\begin_layout Itemize
Das Element mit dem Identifier 
\family typewriter
\series bold
#highscore
\family default
\series default
 dient dazu den Highscore einzublenden.
\end_layout

\begin_layout Itemize
Das Table-Element mit dem Identifier 
\family typewriter
\series bold
#snakegame
\family default
\series default
 dient dazu das Spielfeld einzublenden.
 Es wird mittels CSS so gestaltet, dass die Schlange als Hintergrund des
 Spielfelds dient.
\end_layout

\begin_layout Standard
Alle CSS-Gestaltungen werden in der 
\family typewriter
\series bold
style.css
\family default
\series default
 vorgenommen.
 Die Applikationslogik wird über das 
\family typewriter
\series bold
snakeclient.dart
\family default
\series default
 Script geladen.
 Für nicht Dart-fähige Browser wird ergänzend gem.
 den Dart-Konventionen die 
\family typewriter
\series bold
dart.js
\family default
\series default
 geladen, um Dart Logik in Javascript Engines zur Ausführung bringen zu
 können.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Screenshot-game.png
	lyxscale 40
	width 25col%

\end_inset


\begin_inset space \qquad{}
\end_inset


\begin_inset Graphics
	filename Screenshot-highscore.png
	lyxscale 40
	width 25col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Screenshots des SnakeGames
\begin_inset CommandInset label
LatexCommand label
name "fig:Screenshots-des-SnakeGames"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Objekte der Klasse 
\family typewriter
\series bold
SnakeView
\family default
\series default
 agieren nie eigenständig, sondern werden grundsätzlich von Objekten der
 Klasse 
\family typewriter
\series bold
Snake\SpecialChar \-
GameController
\family default
\series default
 genutzt (vgl.
 Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassendiagramm-(VC)"

\end_inset

), um View Aktualisierungen vorzunehmen (vgl.
 auch Sequenzdiagramme in den Abschnitten 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Laufendes-Spiel"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Game-Over-bei-registriertem-Spieler"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Game-Over-bei-nicht-registriertem-Spieler"

\end_inset

).
 Der Controller kann sich hierzu folgender Methoden und Attribute bedienen,
 um den DOM-Tree nicht selber manipulieren zu müssen (Separation of Concerns):
\end_layout

\begin_layout Itemize
Die 
\family typewriter
\series bold
update()
\family default
\series default
 Methode aktualisiert den Spielzustand im Table-Element 
\family typewriter
\series bold
#snakegame
\family default
\series default
.
 Sie wird durch den Controller im Verlaufe der 
\family typewriter
\series bold
snakeTrigger
\family default
\series default
 und 
\family typewriter
\series bold
miceTrigger
\family default
\series default
 Verarbeitung aufgerufen (vgl.
 auch Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sequenzdiagramm-(Laufendes-Spiel)"

\end_inset

).
\end_layout

\begin_layout Itemize
Die 
\family typewriter
\series bold
generateField()
\family default
\series default
 Methode erzeugt eine Tabelle zur Darstellung des quadratischen Spielfeldes.
 Dieses wird in den DOM-Tree in das TABLE-Element mit der Id 
\family typewriter
\series bold
#snakegame
\family default
\series default
 eingeblendet.
\end_layout

\begin_layout Itemize
Highscore und Highscore Speicherung kann mittels der Methode 
\family typewriter
\series bold
showHighscore()
\family default
\series default
 als Formular in das DIV-Element mit der Id 
\family typewriter
\series bold
#overlay
\family default
\series default
 des DOM-Tree eingeblendet werden.
 
\end_layout

\begin_layout Itemize
Mittels der 
\family typewriter
\series bold
warn()
\family default
\series default
 Methode können innerhalb des Highscore Formulars Warnungstexte eingeblendet
 werden (bspw.
 falsches Password eingegeben, Spieler nicht vorhanden, etc.)
\end_layout

\begin_layout Itemize
Die Methode 
\family typewriter
\series bold
closeForm()
\family default
\series default
 blendet das Highscore Speicherformular wieder aus dem DOM-Tree aus (d.h.
 das Formular wird geschlossen).
\end_layout

\begin_layout Itemize
Mittels der Attribute 
\family typewriter
\series bold
user
\family default
\series default
 und 
\family typewriter
\series bold
password
\family default
\series default
 kann ein 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 im Verlaufe der Highscore Verarbeitung auf die Input-Eingaben des Highscore
 Formulars (siehe Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Screenshots-des-SnakeGames"

\end_inset

, rechte Screenshot) zugreifen.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Klassendiagram-View-Controller.pdf
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Klassendiagramm (View-Controller und Gamekey)
\begin_inset CommandInset label
LatexCommand label
name "fig:Klassendiagramm-(VC)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Controller
\begin_inset CommandInset label
LatexCommand label
name "sub:Controller"

\end_inset


\end_layout

\begin_layout Standard
Der Controller ist für die Ablaufsteuerung des Spiels zuständig.
 Er verarbeitet dabei gem.
 Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Architektur"

\end_inset

 sowohl zeitgesteuerte Events, als auch Nutzerinteraktionen.
 Während des Spiels hat der Spieler die Möglichkeit die Schlange (
\family typewriter
\series bold
Snake
\family default
\series default
) mittels der Cursortasten zu bewegen.
 Diese Steuerung ist recht naheliegend und kann wird am einfachsten durch
 das Listing 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ref{snakecontrol}
\end_layout

\end_inset

 erläutert.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[caption=Steuerung der Schlange,firstline=141,lastline=149,label=
snakecontrol]{../lib/src/control.dart} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dies dreht im wesentlichen nur den Kopf der Schlange in die Richtung, in
 die sie sich im nächsten Zug zu bewegen hat.
 Komplexer sind die zeitgesteuerten Abläufe, die die Dynamik des Spiels
 realisieren.
 Der grundsätzliche Prozess sich ändernder Spielzustände und deren Abbildung
 auf dem View, wird in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Laufendes-Spiel"

\end_inset

 erläutert.
 Noch komplexer sind erstaunlicherweise die Abläufe im Falle des Game Overs.
 Zum einen müssen hier die zeitgesteuerten Events deaktiviert werden, zum
 anderen muss der Controller eng mit dem View und dem Gamekey Service interagier
en, um ggf.
 erreichte Highscores zu speichern und noch nicht registrierte Nutzer gesondert
 im Gamekey Service zu registrieren.
 Diese GameOver Abläufe werden aufgrund ihrer Komplexität in den Abschnitten
 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Game-Over-bei-registriertem-Spieler"

\end_inset

 und 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Game-Over-bei-nicht-registriertem-Spieler"

\end_inset

 gesondert erläutert.
\end_layout

\begin_layout Subsubsection
Laufendes Spiel
\begin_inset CommandInset label
LatexCommand label
name "sub:Laufendes-Spiel"

\end_inset


\end_layout

\begin_layout Standard
Durch den 
\family typewriter
\series bold
snakeTrigger
\family default
\series default
 und den 
\family typewriter
\series bold
miceTrigger
\family default
\series default
 werden periodisch die Abläufe in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sequenzdiagramm-(Laufendes-Spiel)"

\end_inset

 angestoßen.
 Beide Abläufe sind identisch, daher wird nur der Kontrollfluss der Schlange
 erläutert.
 Der Kontrollfluss der Mäuse (im aktuellen Zustand wird nur eine sich nicht
 bewegende Maus genutzt) ist (bis auf eine fehlende Beschleunigung der Mausgesch
windigkeit) analog.
 
\end_layout

\begin_layout Standard
Obwohl nur eine sich nicht bewegende Maus genutzt wird, wäre es ein leichtes,
 das bestehende Spiel, so zu erweitern, dass die Schlange mehrere Mäuse
 jagen könnte.
 Das Spiel ist grundsätzlich dafür vorbereitet.
 Man müsste nur den Konstruktor des 
\family typewriter
\series bold
SnakeGame
\family default
\series default
 wie folgt erweitern.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis:} Es ist häufig nicht sonderlich schwer, ein Spiel flexibel
 zu gestalten, wenn man sich Anfangs ein paar Gedanken macht und nicht nur
 versucht ein spezifisches Problem zu lösen.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Obwohl klassisch im SnakeGame nur eine sich nicht bewegende Maus genutzt
 wird, wäre es ein leichtes, das bestehende Spiel so zu erweitern, dass
 die Schlange mehrere Mäuse jagen könnte.
 Das Spiel ist grundsätzlich dafür vorbereitet.
 Man müsste nur den Konstruktor der Klasse 
\backslash
textbf{
\backslash
texttt{SnakeGame}} wie folgt erweitern.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
begin{addmargin}[20pt]{10pt}
\end_layout

\begin_layout Plain Layout


\backslash
begin{lstlisting}[caption=Konstruktor der Klasse 
\backslash
texttt{SnakeGame}]
\end_layout

\begin_layout Plain Layout

SnakeGame(this._size) {     
\end_layout

\begin_layout Plain Layout

	start();     
\end_layout

\begin_layout Plain Layout

	_snake = new Snake.on(this);     
\end_layout

\begin_layout Plain Layout

	addMouse();     
\end_layout

\begin_layout Plain Layout

	// addMouse(); // Um mit zwei Maeusen zu spielen
\end_layout

\begin_layout Plain Layout

	// addMouse(); // Um mit drei Maeusen zu spielen, ...
\end_layout

\begin_layout Plain Layout

	stop();  
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\begin_layout Plain Layout


\backslash
end{addmargin}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Die SnakeGame Implementierung sieht sogar sich bewegende Mäuse vor.
 Das ist der Grund warum es einen 
\backslash
textbf{
\backslash
texttt{miceTrigger}} gibt, der bei sich nicht bewegenden Mäusen eigentlich
 nicht erforderlich wäre.
 Sie können SnakeGame mit sich bewegenden Mäusen spielen, wenn sie die 
\backslash
textbf{
\backslash
texttt{addMouse()}} Methode der Klasse 
\backslash
textbf{
\backslash
texttt{SnakeGame}} wie folgt abändern.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
begin{addmargin}[20pt]{10pt}    
\end_layout

\begin_layout Plain Layout


\backslash
begin{lstlisting}[caption=Hinzufügen von Mäusen mittels der Methode 
\backslash
texttt{addMouse()} der Klasse 
\backslash
texttt{SnakeGame}]
\end_layout

\begin_layout Plain Layout

void addMouse() {     
\end_layout

\begin_layout Plain Layout

  if (stopped) return;     
\end_layout

\begin_layout Plain Layout

  Random r = new Random();     
\end_layout

\begin_layout Plain Layout

  final row = r.nextInt(_size);     
\end_layout

\begin_layout Plain Layout

  final col = r.nextInt(_size);     
\end_layout

\begin_layout Plain Layout

  //_mice.add(new Mouse.staticOn(this, row, col));     
\end_layout

\begin_layout Plain Layout

  _mice.add(new Mouse.movingOn(this, row, col));   
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\begin_layout Plain Layout


\backslash
end{addmargin}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Auch wenn das SnakeGame in der vorliegenden Implementierung kein Level-System
 vorsieht, sollte ersichtlich sein, dass man auf Basis dieser beiden Variationsm
öglichkeiten die Schwierigkeit des Spiels zusätzlich zur steigenden Geschwindigk
eit der Schlange in unterschiedlichen Leveln variieren könnte.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der 
\family typewriter
\series bold
snakeTrigger
\family default
\series default
 und 
\family typewriter
\series bold
miceTrigger
\family default
\series default
 feuern periodisch und der 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 ruft mit jedem Trigger Event die 
\family typewriter
\series bold
moveSnake()
\family default
\series default
 bzw.
 die 
\family typewriter
\series bold
moveMice()
\family default
\series default
 Methode auf, wie in Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sequenzdiagramm-(Laufendes-Spiel)"

\end_inset

 gezeigt.
 Als erstes wird geprüft, ob das Spiel einen Game Over Zustand erreicht
 hat.
 Sollte dies der Fall sein, wird gem.
 Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Game-Over-bei-registriertem-Spieler"

\end_inset

 oder 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Game-Over-bei-nicht-registriertem-Spieler"

\end_inset

 fortgefahren.
 Solange das Spiel noch läuft, ruft der Controller je nach Trigger die 
\family typewriter
\series bold
moveSnake()
\family default
\series default
 oder die 
\family typewriter
\series bold
moveMice()
\family default
\series default
 Methode des Model (
\family typewriter
\series bold
SnakeGame
\family default
\series default
) auf (die es wiederum an die 
\family typewriter
\series bold
move()
\family default
\series default
 Methoden der Klassen 
\family typewriter
\series bold
Snake
\family default
\series default
 bzw.
 
\family typewriter
\series bold
Mouse
\family default
\series default
 delegieren, nicht in Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sequenzdiagramm-(Laufendes-Spiel)"

\end_inset

 dargestellt).
\end_layout

\begin_layout Standard
Auf diese Weise wird das Model in seinen nächsten Zustand überführt.
 Anschließend benachrichtigt der Controller den 
\family typewriter
\series bold
SnakeView
\family default
\series default
 über das Eintreten eines neuen Model Zustands und veranlasst so die Aktualisier
ung der Oberfläche mittels der 
\family typewriter
\series bold
update()
\family default
\series default
 Methode des Views.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Sequenzdiagramm-running-game.pdf
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequenzdiagram (laufendes Spiel)
\begin_inset CommandInset label
LatexCommand label
name "fig:Sequenzdiagramm-(Laufendes-Spiel)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Game Over bei registriertem Spieler
\begin_inset CommandInset label
LatexCommand label
name "sub:Game-Over-bei-registriertem-Spieler"

\end_inset


\end_layout

\begin_layout Standard
Im Falle das während der Bearbeitung des 
\family typewriter
\series bold
snakeTrigger
\family default
\series default
 oder des 
\family typewriter
\series bold
miceTrigger
\family default
\series default
 festgestellt wird, dass sich der GameOver Zustand im Spiel eingestellt
 hat, erfolgen zwei Abläufe, die gestartet werden, je nachdem ob es sich
 beim Spieler um einen registrierten Spieler (siehe Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Game-Over-bei-registriertem-Spieler"

\end_inset

) oder nicht registrierten Spieler (siehe Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Game-Over-bei-nicht-registriertem-Spieler"

\end_inset

) handelt.
\end_layout

\begin_layout Standard
Im Falle eines registrierten Spieler ist der Kontrollfluss wie in Abbildung
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sequenzdiagramm-(Game Over, registrierter Spieler)"

\end_inset

 gezeigt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Sequenzdiagramm-game-over-registered-user.pdf
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequenzdiagram (Game Over bei registriertem Spieler)
\begin_inset CommandInset label
LatexCommand label
name "fig:Sequenzdiagramm-(Game Over, registrierter Spieler)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Im Verlaufe des zeitgesteuerten Modelltriggerings (
\family typewriter
\series bold
moveSnake()
\family default
\series default
 bzw.
 
\family typewriter
\series bold
moveMice()
\family default
\series default
) wird irgendwann der Game Over Zustand des Models mittels der 
\family typewriter
\series bold
gameOver()
\family default
\series default
 Methode festgestellt.
 In diesem Fall wird die Game Over Behandlung durch den 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 vorgenommen.
\end_layout

\begin_layout Standard
Hierzu veranlasst der 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 das 
\family typewriter
\series bold
SnakeGame
\family default
\series default
 mittels der Methode 
\family typewriter
\series bold
stop()
\family default
\series default
 in den 
\family typewriter
\series bold
stopped
\family default
\series default
 Status zu wechseln.
 Anschließend wird der 
\family typewriter
\series bold
SnakeView
\family default
\series default
 für ein letztes 
\family typewriter
\series bold
update()
\family default
\series default
 benachrichtigt.
 Anschließend wendet sich der 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 an die 
\family typewriter
\series bold
GameKey
\family default
\series default
 API um alle gespeicherten Highscores mittels 
\family typewriter
\series bold
getStates()
\family default
\series default
 anzufordern.
 Die 
\family typewriter
\series bold
GameKey
\family default
\series default
 Klasse leitet diese Anfrage an den GameKey Service über die in Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Architektur"

\end_inset

 gezeigte REST Schnittstelle (vgl.
 auch Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:REST-Schnittstelle-des-Gamekey-Service"

\end_inset

) weiter.
 Diese Highscores werden sortiert und mittels 
\family typewriter
\series bold
showHighscore()
\family default
\series default
 an den 
\family typewriter
\series bold
SnakeView
\family default
\series default
 geleitet, damit dieser ein Formular zur Highscore-Speicherung auflegt (siehe
 auch Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Screenshots-des-SnakeGames"

\end_inset

(rechts)).
 Im Highscore Formular sind Eingabefelder für User und Passwort Informationen
 sowie ein Save und Cancel Button vorhanden.
 Es werden entsprechende Listener registriert.
 
\end_layout

\begin_layout Standard
Die erste Phase der Verarbeitung ist damit beendet.
 Der View befindet sich jetzt in einem Zustand, dass ein Spieler seinen
 Namen und Passwort eingeben kann und seinen Highscore mittels Save speichern
 kann (bzw.
 das Speichern mittels Cancel abbrechen kann, wird hier nicht näher beleuchtet,
 weil trivial).
\end_layout

\begin_layout Standard
Die zweite Phase der Verarbeitung beginnt mit der Betätigung des 
\series bold
Save Buttons
\series default
 durch den Spieler.
 In diesem Fall übernimmt wieder der Controller und fragt über den 
\family typewriter
\series bold
SnakeView
\family default
\series default
 Spieler (
\family typewriter
\series bold
user
\family default
\series default
) und Passwort (
\family typewriter
\series bold
pwd
\family default
\series default
) Daten aus den Eingabefeldern ab.
 Mittels dieser Daten wendet er sich mittels 
\family typewriter
\series bold
getUserId()
\family default
\series default
 an die 
\family typewriter
\series bold
GameKey
\family default
\series default
 API, um die Id des Spielers in Erfahrung zu bringen.
 Sollte der Spieler im GameKey Service existieren und das korrekte Passwort
 angegeben haben, so wird eine User Id zurück gegeben, die benötigt wird,
 um einen Status mittels 
\family typewriter
\series bold
storeState()
\family default
\series default
 im GameKey Service für einen Spieler zu speichern.
 Im erfolgreichen Fall des Speicherns wendet sich der 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 abschließend mittels 
\family typewriter
\series bold
closeForm()
\family default
\series default
 an den 
\family typewriter
\series bold
SnakeView
\family default
\series default
 um das Formular zu schließen und anschließend ein neues Spiel mittels 
\family typewriter
\series bold
newGame()
\family default
\series default
 zu starten.
\end_layout

\begin_layout Subsubsection
Game Over bei nicht registriertem Spieler
\begin_inset CommandInset label
LatexCommand label
name "sub:Game-Over-bei-nicht-registriertem-Spieler"

\end_inset


\end_layout

\begin_layout Standard
Im Falle eines nicht registrierten Spieler ist der Kontrollfluss wie in
 Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sequenzdiagramm-(Game Over, nicht registrierter Spieler)"

\end_inset

 gezeigt.
 Der Ablauf ist grundsätzlich wie in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sequenzdiagramm-(Game Over, registrierter Spieler)"

\end_inset

 gezeigt, jedoch muss die zweite Phase durch eine dritte Phase der Verarbeitung
 (Spieler Erzeugung) ergänzt werden.
\end_layout

\begin_layout Standard
Im Falle das ein Spieler das Spiel zum ersten Mal spielt (und vorher noch
 keine anderen an den GameKey Service angebunden Spiele gespielt hat) kann
 
\family typewriter
\series bold
getUserId()
\family default
\series default
 keine User Id zurückgeben, denn der Spieler existiert ja noch nicht.
 In diesem Fall blendet der 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 mittels der 
\family typewriter
\series bold
warn()
\family default
\series default
 Methode im 
\series bold
SnakeView
\series default
 eine entsprechende Warnung ein, dass der Spieler noch nicht existiert.
 Zusätzlich werden zwei Buttons (Create User, Cancel) eingeblendet, die
 bei entsprechenden Listenern registriert werden.
 Die zweite Phase ist damit um das storeState() gekürzt.
\end_layout

\begin_layout Standard
Die dritte Phase der Verarbeitung kann über den 
\series bold
Create Button
\series default
 durch den Nutzer angestoßen werden.
 In diesem Fall übernimmt wieder der Controller und registriert den Spieler
 mittels 
\family typewriter
\series bold
registerUser()
\family default
\series default
 über die 
\family typewriter
\series bold
GameKey
\family default
\series default
 API beim GameKey Service.
 Im erfolgreichen Fall wird dem User eine Id zugewiesen, die dann dazu genutzt
 werden kann, den Highscore mittels 
\family typewriter
\series bold
storeState()
\family default
\series default
 wie im Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Game-Over-bei-registriertem-Spieler"

\end_inset

 erläutert zu speichern.
 Anschließend wird das Formular mittels 
\family typewriter
\series bold
closeForm()
\family default
\series default
 geschlossen und ein neues Spiel gestartet (
\family typewriter
\series bold
newGame()
\family default
\series default
).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Sequenzdiagramm-game-over-not-registered-user.pdf
	width 90col%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Sequenzdiagram (Game Over bei nicht registriertem Spieler)
\begin_inset CommandInset label
LatexCommand label
name "fig:Sequenzdiagramm-(Game Over, nicht registrierter Spieler)"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
REST-basierte Storage Lösung
\begin_inset CommandInset label
LatexCommand label
name "sub:REST-basierter-Storage"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis:} Die Referenzimplementierung des Gamekey Service in Ruby,
 dient nur dazu, dass Spiel und Storage parallel durch Ihr Team entwickelt
 werden kann.
 Denken sie über eine entsprechende Aufgabenverteilung nach.
 Eine wesentliche Aufgabe ist es, dass sie die Storage Referenzlösung als
 REST-basierten Dart Service nachimplementieren, um nachzuweisen, dass Sie
 in der Lage sind Dart auch serverseitig (Storage) und nicht nur clientseitig
 (Spiel) einzusetzen.
 Gleichzeitig weisen Sie so nach, dass sie sich hinreichend in REST-Prinzipien
 und das HTTP Protokoll eingearbeitet haben.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

Ihr Spiel muss sowohl mit der Referenzimplementierung in Ruby als auch mit
 ihrer Eigenentwicklung in Dart funktionieren.
 
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Referenzimplementierung (GameKey Service, Ruby)
\end_layout

\begin_layout Standard
Die Referenz-Storage Lösung ist bewusst in Ruby und nicht in Dart implementiert
 und findet sich hier: 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
url{https://bitbucket.org/nanekratzke/gamekey}
\end_layout

\end_inset

.
 Sie finden unter diesem Link auch eine kurze Online Dokumentation, wie
 der GameKey command line client funktioniert.
 
\end_layout

\begin_layout Standard
Sie können sich die Ruby Implementierung als Git Repository clonen:
\end_layout

\begin_layout LyX-Code
git clone https://nanekratzke@bitbucket.org/nanekratzke/gamekey.git
\end_layout

\begin_layout Standard
Ihre Aufgabe ist es (neben der Entwicklung des eigentlichen Spiels), diese
 Referenzimplementierung mit identischer Verhaltensweise in Dart nachzuimplement
ieren.
\end_layout

\begin_layout Standard
Der GameKey Service kann auf Systemen auf denen Ruby (Version 2.2 oder höher)
 installiert ist, mittels
\end_layout

\begin_layout LyX-Code
gem install gamekey
\end_layout

\begin_layout Standard
installiert werden.
 Anschließend kann der Service kann mittels
\end_layout

\begin_layout LyX-Code
gamekey start
\end_layout

\begin_layout Standard
gestartet werden.
 Mittels 
\end_layout

\begin_layout LyX-Code
gamekey help
\end_layout

\begin_layout LyX-Code
gamekey help <command>
\end_layout

\begin_layout Standard
erhalten sie weitere Nutzungshinweise für die einzelnen command line Befehle.
\end_layout

\begin_layout Standard
Der Gamekey-Service kann theoretisch als In-Memory Key-Value Lösung betrieben
 werden.
 Alle Schreiboperationen werden jedoch in der Referenzimplementierung in
 eine 
\family typewriter
\size small
gamekey.json
\family default
\size default
 Datei serialisiert (das senkt die Performance, man erhält dafür aber Persistenz
 und Debug-Möglichkeiten).
 Diese Datei (letztlich nur eine 1:1 JSON Serialisierung der internen Datenstruk
tur zum Zeitpunkt der letzten Schreiboperation) können Sie für Test und
 Debugging-Zwecke heranziehen.
\end_layout

\begin_layout Standard
Details der REST-basierten Schnittstellen finden sich in der 
\family typewriter
\size small
lib/gamekey.rb
\family default
\size default
 in der Methode 
\family typewriter
\size small
Gamekey::api()
\family default
\size default
.
 Hier werden alle URLs und zulässigen HTTP Methoden sowie Rückgabecodes
 erklärt.
 Nachfolgende Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:REST-Schnittstelle-des-Gamekey-Service"

\end_inset

 fast die REST-basierte Schnittstelle für einen ersten Überblick zusammen.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top" width="70col%">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Ressource
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
METHOD
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Erklärung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/user
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
POST
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Erstellt eine neue User Resource (Spieler eines Games).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/users
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
GET
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Liefert alle User als JSON Liste.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/user/:id
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
GET
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Liest User Daten zu einem User mit der ID :id aus.
 User Daten werden als JSON zurückgegeben.
 Der User muss sich mit seinem Passwort authentifizieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/user/:id
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
PUT
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Aktualisiert User Daten für einen User mit der ID :id.
 Aktualisierte User Daten werden als JSON zurückgegeben.
 Der User muss sich mit seinem Passwort authentifizieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/user/:id
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
DELETE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Löscht User Ressource für einen User mit der ID :id.
 Der User muss sich mit seinem Passwort authentifizieren.
 Diese Operation löscht auch alle GameStates des Users!
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/game
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
POST
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Erstellt eine neue Game Resource (Games).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/games
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
GET 
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Liefert alle Games als JSON Liste.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/game/:id
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
GET
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Liest Game Daten zu einem Game mit der ID :id aus.
 Game Daten werden als JSON zurückgegeben.
 Das Game muss sich mit seinem Secret authentifizieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/game/:id
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
PUT
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Aktualisiert Game Daten für ein Game mit der ID :id.
 Aktualisirte Game Daten werden als JSON zurückgegeben.
 Das Game muss sich mit seinem Secret authentifizieren.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/game/:id
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
DELETE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Löscht Game Ressource für ein Game mit der ID :id.
 Das Game muss sich mit seinem Secret authentifizieren.
 Diese Operation löscht auch alle GameStates des Games!
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/gamestate/:gid/:uid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
GET
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Liefert alle GameState Ressourcen eines Games mit der ID :gid für den User
 mit der ID :uid.
 Das Game muss sich mit seinem Secret authentifizieren.
 Alle GameStates werden als JSON Liste zurückgegeben.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/gamestate/:gid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
GET
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Liefert alle GameState Ressourcen eines Games mit der ID :gid für alle.
 Das Game muss sich mit seinem Secret authentifizieren.
 Alle GameStates werden als JSON Liste zurückgegeben.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
/gamestate/:gid/:uid
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
POST
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Speichert einen GameState für ein Spiel mit der ID :gid und einem User mit
 der ID :uid.
 Das Game muss sich mit seinem Secret authentifizieren.
 Der User muss sich mit seinem Passwort authentifizieren.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
REST Schnittstelle des Gamekey Service
\begin_inset CommandInset label
LatexCommand label
name "tab:REST-Schnittstelle-des-Gamekey-Service"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Gamekey Service beinhaltet ferner einen Satz an automatisierten Referenztest
s, mit der Sie prüfen können, ob ihre Dart Implementierung des Gamekey Service
 korrekt ist und sich verhält wie die Referenzlösung.
 
\end_layout

\begin_layout LyX-Code
gamekey test --host http://my.gamekey.implementation:8080
\end_layout

\begin_layout Standard
Die Tests die ihre Dartimplementierung bestehen muss, finden sich in der
 Datei 
\family typewriter
\size small
lib/reference.rb
\family default
\size default
 der Referenzimplementierung.
 Nicht erfolgreiche Testfälle werden mit Identifier ausgegeben.
 Anhand des Identifiers können sie in der Referenzimplementierung herausfinden,
 welcher Testfall nicht erfolgreich war.
 Auch die Referenzimplementierung ist gegen diese Testfälle geprüft worden.
\end_layout

\begin_layout Standard
Ihre Referenzimplementierung muss ferner mit dem GameKey command line client
 wie die Referenzimplementierung funktionieren.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis:} Ihnen wird ein funktionsfähiger GameKey Service in der
 Ruby Referenzimplementierung für die Laufzeit des Projekts zur Verfügung
 gestellt.
 
\end_layout

\begin_layout Plain Layout

Den Endpoint finden sie in Moodle.
 Ihr Game muss aber ebenfalls mit ihrer Dart Implementierung des Gamekey
 Service funktionieren.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Client-seitige Anbindung an den GameKey Service (Dart Schnittstelle)
\begin_inset CommandInset label
LatexCommand label
name "sub:Client-seitige-Anbindung-an-REST"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis:} Die Gamekey Dart Schnittstelle unterstützt nicht die volle
 Funktionalität der REST Schnittstelle.
 Bspw.
 ist es nicht möglich Spielernamen zu ändern, Spieler zu löschen, oder dass
 Passwort eines Spielers zu ändern.
 Es wird daher absehbar nicht für ihr Spiel ausreichen, einfach nur die
 
\backslash
texttt{gamekey.dart} Datei für ihr Spiel zu übernehmen.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis:} Vergessen Sie bitte nicht! Sie müssen sowohl die 
\backslash
textbf{clientseitige Dart API} als auch die 
\backslash
textbf{serverseitige Storage Lösung} in Dart entwickeln.
 Ihre clientseitige Dart API muss auch mit der Rubyimplementierung funktionieren.
 Sie können die Referenztests der Ruby Implementierung problemlos gegen
 ihre Dart-Implementierung laufen lassen, um zu prüfen, ob sich ihr Dart
 Service genauso verhält, wie der Ruby Referenz-Service.
 D.h.
 sie müssen keine eigenen Testfälle für die Storage Lösung entwickeln (sie
 dürfen aber natürlich).
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der GameKey Service wird in SnakeDart mittels eines Objekts der Klasse 
\family typewriter
\series bold
GameKey
\family default
\series default
 (vgl.
 Abb.
 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassendiagramm-(VC)"

\end_inset

) angesprochen.
 Die Klasse 
\family typewriter
\series bold
GameKey
\family default
\series default
 dient dem Controller dazu mit dem GameKey Service interagieren zu können,
 ohne die Details der REST Schnittstelle kennen zu müssen.
\end_layout

\begin_layout Standard
Ein 
\family typewriter
\series bold
GameKey
\family default
\series default
 Objektzustand umfasst letztlich nicht mehr
\end_layout

\begin_layout Itemize
als die 
\family typewriter
\series bold
gameid
\family default
\series default
 des Spiels (wird bei Registerieren des Spiels vergeben, siehe Online Dokumentat
ion des Gamekey Service)
\end_layout

\begin_layout Itemize
das 
\family typewriter
\series bold
secret
\family default
\series default
 des Spiels (wird mit der gameid zur Authentifizierung benötigt)
\end_layout

\begin_layout Itemize
sowie der 
\family typewriter
\series bold
uri
\family default
\series default
 des GameKey Service Endpoints.
\end_layout

\begin_layout Standard
Ein 
\family typewriter
\series bold
GameKey
\family default
\series default
 Objekt kann mittels eines Konstruktors erzeugt werden.
 Anschließend ist dieses Objekt in der Lage mit dem GameKey Service über
 eine REST-Schnittstelle (vgl.
 Tabelle 
\begin_inset CommandInset ref
LatexCommand ref
reference "tab:REST-Schnittstelle-des-Gamekey-Service"

\end_inset

) zu kommunizieren.
 Es kapselt damit im wesentlichen die GameKey REST API für den 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 in Form folgender Methoden:
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
registerUser()
\family default
\series default
 dient dazu, einen neuen Nutzer im GameKey Service zu registrieren (hierzu
 muss Nutzername und Passwort bekannt sein).
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
getUser()
\family default
\series default
 dient dazu, detaillierte Informationen über einen Nutzer abzurufen.
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
authenticate()
\family default
\series default
 dient dazu, einen Nutzer anhand seines Namens und seines Passworts zu authentif
izieren.
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
getUserId()
\family default
\series default
 dient dazu, auf Basis eines Nutzernamens die zugehörige Id des Nutzers
 zu bestimmen (da ein Nutzer diese kryptische Id normalerweise niemals bewusst
 eingeben würde)
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
listUsers()
\family default
\series default
 liefert eine JSON List mit öffentlichen Informationen über alle im GameKey
 registrierten Nutzer.
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
getStates()
\family default
\series default
 liefert eine JSON List mit allen für ein Game gespeicherten Spielzustände.
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
storeState()
\family default
\series default
 speichert für einen Nutzer einen JSON State (der mittels 
\family typewriter
\series bold
getStates()
\family default
\series default
 nachträglich wieder abgerufen werden kann).
\end_layout

\begin_layout Standard
Alle genannten Methoden arbeiten asynchron (da sie auf Netzwerkzugriffen
 beruhen) und lieferen daher 
\family typewriter
Future
\family default
s zurück.
 Die oben genannten Methoden decken nur den Teil der REST API ab, die für
 das SnakeGame erforderlich sind.
 Die REST API wird nicht komplett durch diese Dart Schnittstelle genutzt.
 
\end_layout

\begin_layout Section
Level- und Parametrisierungskonzept
\begin_inset CommandInset label
LatexCommand label
name "sec:Level--und-Parametrisierungskonzept"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } SnakeDart sieht kein Levelkonzept (bis auf eine triviale
 Beschleunigung der Schlange) und nur ein rudimentäres Parameterisierungskonzept
 vor.
 Sie sollten für ihr Spiel jedoch beides in deutlich umfangreicherer Form
 vorsehen.
 Ihnen dient dieses Kapitel daher primär als Platzhalter beides zu beschreiben.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Levelkonzept
\end_layout

\begin_layout Standard
Da SnakeGame nur als Anschauungsgegenstand dient, wurde auf die Implementierung
 eines Levelkonzepts verzichtet.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Sie sollten an dieser Stelle beschreiben, wie ihre Level
 definiert werden und nach welchen Kriterien sie steigende Schwierigkeitsgrade
 definieren.
\end_layout

\begin_layout Plain Layout

Gehen Sie dabei insbesondere auf die Art und Weise ein, mittels welcher
 Datenformate sie unterschiedliche Level konfigurieren.
 Vergessen Sie kein einprägsames Beispiel, um ihre Leveldefinition exemplarisch
 zu erläutern.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Ihre Angaben müssen so detailliert sein, dass jemand,
 der nicht aus ihrem Team stammt, in der Lage ist, einen weiteren Level
 für das Spiel zu ergänzen und/oder bestehende Level abzuändern.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Parameterisierungskonzept
\begin_inset CommandInset label
LatexCommand label
name "sub:Parameterisierungskonzept"

\end_inset


\end_layout

\begin_layout Standard
Da SnakeGame nur als Anschauungsgegenstand dient, wurde auf die Implementierung
 eines vollständigen Parametrisierungskonzepts verzichtet.
 Dennoch wurde bspw.
 die Anbindung an den Gamekey-Service mittels einer extermen Settings-Datei
 folgenden Formats umgesetzt.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[caption=Spielparameter des 
\backslash
texttt{SnakeGame}s (
\backslash
texttt{gamekey.json})]{../web/gamekey.json} 
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Die 
\family typewriter
\series bold
gameid
\family default
\series default
 bezeichnet dabei die vom GamekeyService während der Registrierung zugewiesen
 Identifier
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
host
\family default
\series default
 ist ein valider DNS-Name oder IP Adresse (String codiert), der angibt auf
 welchem Host der Gamekey Service läuft (da der Gamekey Service CORS enabled
 ist, muss dies nicht derselbe Host sein, von dem das Spiel geladen wurde)
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
port
\family default
\series default
 ist ein Integer Wert, der den Port angibt auf dem der Gamekey Service lauscht
\end_layout

\begin_layout Standard
Diese Datei wird durch den 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 zu Beginn des Ladens des Spiels auf folgende Weise geladen und zur Herstellung
 der Gamekey-Connection genutzt.
 
\family typewriter
\series bold
gamekeySettings
\family default
\series default
 ist dabei eine String-Konstante die lediglich auf die 
\family typewriter
'gamekey.json'
\family default
 Datei verweist.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[caption=Laden der Spielparameter,firstline=96,lastline=118]{../lib
/src/control.dart} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Es sollte ihnen ein Leichtes sein, diesen Ansatz für weitere
 spielrelevante Parameter zu erweitern.
 Sie ermöglichen sich damit nebenbei einfachere Anpassungsmöglichkeiten
 während der finalen Feintuningphase ihres Spiels.
 
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Beachten sie bitte, dass sie ein Parametrisierungskonzept
 ggf.
 für ihr Spiel und einmal für Ihre Dart-Implementierung des Gamekey Storage
 Service benötigen.
 Sie müssen also ggf.
 zwei Parameterisierungskonzepte dokumentieren, bzw.
 erläutern, warum ein Parametrisierungskonzept ggf.
 nicht erforderlich ist.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ergänzend zu den Angaben in der 
\family typewriter
gamekey.json
\family default
 Datei sind diverse Konstanten im 
\family typewriter
\series bold
SnakeGameController
\family default
\series default
 (
\family typewriter
lib/src\SpecialChar \slash{}
control.dart
\family default
) definiert (die grundsätzlich auf vergleichbare Art und Weise in die 
\family typewriter
gamekey.json
\family default
 ausgelagert werden könnten).
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
snakeSpeed
\family default
\series default
 gibt die Zeitspanne in Millisekunden an, die zwischen zwei Schlangenbewegungen
 liegen soll (je größer, je langsamer ist die Schlange)
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
acceleration
\family default
\series default
 gibt die Reduktion der snakeSpeed an, wenn die Schlange eine Maus gefressen
 hat.
 0.01 bedeutet dass die Schlangenbewegung mit jeder gefressenen Maus 1% schneller
 wird.
 Je größer dieser Wert wird, desto spürbarer ist die Beschleunigung mit
 jeder gefressenen Maus (desto schwieriger wird das Spiel).
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
miceSpeed
\family default
\series default
 gibt die Zeitspanne in Millisekunden an, die zwischen zwei Mausbewegungen
 liegen soll (je größer, je langsamer ist die Maus, desto einfacher sind
 Mäuse für die Schlange zu fressen).
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
gamekeyCheck
\family default
\series default
 gibt das Intervall in Sekunden an, in dem geprüft werden soll, ob der Gamekey
 Service erreichbar ist.
\end_layout

\begin_layout Itemize

\family typewriter
\series bold
gameSecret
\family default
\series default
 gibt das Secret des Games an, welches bei der Registrierung des Games beim
 GamekeyService angegeben wurde/bzw.
 durch den Command Line Client automatisch generiert wurde.
 Dieses Secret ist aus Gründen der Schlüsselverteilung hart in das Spiel
 codiert.
 Bei Änderungen des Secrets muss auch das Spiel aktualisiert werden.
 Von der Auslagerung des gameSecret in die 
\family typewriter
gamekey.json
\family default
 wird jedoch aus Sicherheitsgründen abgeraten.
\end_layout

\begin_layout Section
Nachweis der Anforderungen
\begin_inset CommandInset label
LatexCommand label
name "sec:Nachweis-der-Anforderungen"

\end_inset


\end_layout

\begin_layout Standard
Nachfolgend wird erläutert wie die in Kapitel 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Anforderungen-und-abgeleitetes-Konzept"

\end_inset

 eingeführten funktionalen Anforderungen, die Dokumentationsanforderungen
 und die technischen Randbedingungen erfüllt bzw.
 eingehalten werden.
 Dies kann -- wie nachfolgend geschehen -- argumentativ erfolgen, und muss
 nicht durch eine Testfall-getriebene Nachweisführung erfolgen.
 Abschließend wird angegeben, wer im Team welche Verantwortlichkeiten hatte.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Aufgrund der Kürze der Zeit, sollen sie in diesem Projekt
 nur argumentativ und über ihr Spiel nachweisen, dass sie die einzelnen
 Anforderungen abgedeckt haben.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Verweisen Sie -- falls möglich und sinnvoll -- bitte bei
 ihrer Argumentation auf konkrete Assets (Klassen, Scripte, Kapitel der
 Dokumentation, Konfigurationsdateien, etc.) die ihre These der Erfüllung
 von Anforderungen stützen.
 
\backslash
textbf{Behaupten Sie keine Erfüllung, die sie selber nicht sehen.
 Sie sind hier zu wahrheitsgemäßen und nachvollziehbaren Angaben verpflichtet!
 Ihre Argumente gehen in die 
\backslash
uline{Notenfindung} ein.}
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Nachweis der funktionalen Anforderungen
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Nachfolgend erfolgt der Nachweis der Einhaltung funktionaler
 Anforderungen.
 Grundsätzlich gilt: Nur teilweise oder nicht Erfüllung von Anforderungen
 bringt 
\backslash
uline{
\backslash
textbf{Notenabzüge}} mit sich.
 Pro Anforderung sind Erläuterungen anzugeben, warum eine Anforderung als
 erfüllt, teilweise erfüllt oder nicht erfüllt betrachtet wird.
 
\backslash
uline{
\backslash
textbf{Nicht erläuterte Angaben, werden wie nicht erfüllt gewertet.}}
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="5col%">
<column alignment="left" valignment="top" width="15col%">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="60col%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Id
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Kurztitel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Erfüllt
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Teilw.
 erfüllt
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Nicht erfüllt
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Erläuterung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Einplayer Game
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
SnakeGame ist ein Einpersonen Spiel, wie aus dem in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Spielkonzept-des-Snake-Game"

\end_inset

 dargestellten Spielkonzepts hervorgeht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
2D Game
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
SnakeGame wird auf einem 2D-Raster gespielt, wie aus dem in Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Spielkonzept-des-Snake-Game"

\end_inset

 dargestellten Spielkonzepts hervorgeht.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Levelkonzept
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Da SnakeGame nur als Anschauungsgegenstand dient, wurde auf die Implementierung
 eines Levelkonzepts verzichtet.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Parametrisierungs\SpecialChar \-
konzept
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Da SnakeGame nur als Anschauungsgegenstand dient, wurde auf die Implementierung
 eines ausgereiften Parametrisierungskonzept verzichtet.
 Die Gamekey Anbindung wurden jedoch mittels einer Parameterdatei realisiert
 (siehe Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Parameterisierungskonzept"

\end_inset

).
 Weitere Werte zur Verhaltensbeeinflussung, wurden jedoch als Konstanten
 in der Klasse SnakeGameController realisiert, so dass diese an zentraler
 Stelle -- jedoch nur mit Änderung des Quellcodes --- geändert werden können.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
REST-basierter Storage
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel kann auf die JSON-basierte Referenz-Storagelösung zugreifen (vgl.
 Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Client-seitige-Anbindung-an-REST"

\end_inset

).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-6
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Desktop Browser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel ist in Desktop Browsern spielbar.
 Es wurde in Chrome, Safari und Firefox erfolgreich zur Ausführung gebracht,
 gespielt und jeweils ein Highscore gespeichert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
AF-7
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Mobile Browser
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Da SnakeGame nur als Anschauungsgegenstand dient, wurde auf die SmartPhone
 Unterstützung von Mobilebrowsern verzichtet.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Nachweis der funktionalen Anforderungen
\begin_inset CommandInset label
LatexCommand label
name "tab:Nachweis-der-funktionalen-AFo"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Nachweis der Dokumentationsanforderungen
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Nachfolgend erfolgt der Nachweis der Einhaltung der Dokumentat
ionsanforderungen.
 Grundsätzlich gilt: Nur teilweise oder nicht Erfüllung von Anforderungen
 bringt Punktabzüge mit sich.
 Pro Anforderung sind Erläuterungen anzugeben, warum eine Anforderung als
 erfüllt, teilweise erfüllt oder nicht erfüllt betrachtet wird.
 
\backslash
uline{
\backslash
textbf{Nicht erläuterte Angaben, werden wie nicht erfüllt gewertet.}}
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="5col%">
<column alignment="left" valignment="top" width="15col%">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="60col%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Id
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Kurztitel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Erfüllt
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Teilw.
 erfüllt
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Nicht erfüllt
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Erläuterung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
D-1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Dokumentations\SpecialChar \-
vorlage
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Vorliegende Dokumentation dient als Vorlage für Spieldokumentationen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
D-2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Projekt\SpecialChar \-
dokumentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Vorliegende Dokumentation erläutert die übergeordneten Prinzipien und verweist
 an geeigneten Stellen auf die Quelltextdokumentation.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
D-3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Quelltext\SpecialChar \-
dokumentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Es wurden alle Methoden und Datenfelder, Konstanten durch Inline-Kommentare
 erläutert.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
D-4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Libraries
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Alle genutzten Libraries werden in der 
\family typewriter
\series bold
pubspec.yaml
\family default
\series default
 der Implementierung aufgeführt.
 Da nur die zugelassenen Pakete genutzt wurden, sind darüber hinaus keine
 weiteren Erläuterungen, warum welche Pakete genutzt wurden, erforderlich.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Nachweis der Dokumentationsanforderungen
\begin_inset CommandInset label
LatexCommand label
name "tab:Nachweis-der-Dokumentationsanforderungen"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Achten sie bitte darauf, dass sie beim Nachweis der erlaubten/
verbotenen Pakete ggf.
 zwei Projekte berücksichtigen.
 Einmal ihr Spiel und einmal die Referenzimplementierung des Gamekey Storage
 Service.
 Sie müssen den Nachweis also ggf.
 für beide Projekte erbringen.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Nachweis der Einhaltung technischer Randbedingungen
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Nachfolgend erfolgt der Nachweis der Einhaltung der vorgegeben
en technischen Randbedingungen.
 Grundsätzlich gilt: Nur teilweise oder nicht Erfüllung von Anforderungen
 bringt Punktabzüge mit sich.
 Pro Anforderung sind Erläuterungen anzugeben, warum eine Anforderung als
 erfüllt, teilweise erfüllt oder nicht erfüllt betrachtet wird.
 
\backslash
uline{
\backslash
textbf{Nicht erläuterte Angaben, werden wie nicht erfüllt gewertet.}}
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Achten sie bitte darauf, dass sie beim Nachweis der erlaubten/
verbotenen Pakete ggf.
 zwei Projekte berücksichtigen.
 Einmal ihr Spiel und einmal die Referenzimplementierung des Storage Service.
 Sie müssen den Nachweis also ggf.
 für beide Projekte erbringen.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Achten sie bitte bei der Storage Lösung darauf, dass Sie
 objektive Nachweise erbringen müssen, dass ihre Lösung alle Referenztests
 bestanden hat und das ihr Spiel sowohl mit der Referenzlösung als auch
 ihrer Dart Implementierung des Gamekey Service funktionieren muss!
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="5col%">
<column alignment="left" valignment="top" width="15col%">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="60col%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Id
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Kurztitel
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Erfüllt
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Teilw.
 erfüllt
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Nicht erfüllt
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size scriptsize
Erläuterung
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No Canvas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Die Darstellung des Spielfeldes sollte ausschließlich mittels DOM-Tree Techniken
 erfolgen.
 Die Nutzung von Canvas-basierten Darstellungstechniken ist 
\series bold
\bar under
explizit
\series default
\bar default
 untersagt.
 Die Klasse 
\series bold
SnakeView
\series default
 nutzt keinerlei Canvas basierten DOM-Elemente.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Levelformat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Da SnakeGame nur als Anschauungsgegenstand dient, wurde auf die Implementierung
 eines Levelkonzepts verzichtet.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Parameterformat
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Da SnakeGame nur als Anschauungsgegenstand dient, wurde auf die Implementierung
 eines ausgereiften Parametrisierungskonzept verzichtet.
 Die Gamekey Anbindung wurden jedoch mittels einer Parameterdatei realisiert
 (siehe Abschnitt 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Parameterisierungskonzept"

\end_inset

).
 Weitere Werte zur Verhaltensbeeinflussung, wurden jedoch als Konstanten
 in der Klasse SnakeGameController realisiert, so dass diese an zentraler
 Stelle -- jedoch nur mit Änderung des Quellcodes --- geändert werden können.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HTML + CSS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Der View des Spiels beruht ausschließlich auf HTML und CSS (vgl.
 web/index.html).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Gamelogic in Dart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Die Logik des Spiels ist mittels der Programmiersprache Dart realisiert
 worden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-6
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Storagelogic in Dart 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Da SnakeGame nur als Anschauungsgegenstand dient, wurde auf die Dart-Implementie
rung des Storageservice verzichtet.
 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-7
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Storage Referenz
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
SnakeGame nutzt nur die Referenzimplementierung des Storageservice.
 Da die Eigenrealisierung des Storageservice jedoch in Dart nicht vorgenommen
 wurde, kann dieser Teil der Anforderung nicht nachgewiesen werden.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-8
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Storage Referenztest
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Es wurde keine Dart Implementierung der Referenz Storage Services vorgenommen.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-9
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Browser Support
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel muss im Browser Chromium/Dartium (native Dart Engine) funktionieren.
 Das Spiel muss ferner in allen anderen Browserrn (JavaScript Engines) ebenfalls
 in der JavaScript kompilierten Form funktionieren (geprüft wird ggf.
 mit Safari, Chrome und Firefox).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-10
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
MVC Architektur
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel folgt durch Ableitung mehrerer Modell-Klassen (vgl.
 lib/src/model.dart), einer View Klasse (vgl.
 lib/src/view.dart) und dem zentralen Controller (vgl.
 lib/src/controller.dart) einer MVC-Architektur.
 Der GameKey Service (vgl.
 lib/src/gamekey.dart) wird ebenfalls diesem Prinzip unterworfen und wird
 nur vom Controller getriggert, genauso wie das Modell und der View.
 Der View greift zudem auf das Model nur lesend und nicht manipulierend
 zu.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-11
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Erlaubte Pakete
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Es sind nur dart:* packages, sowie das Webframework start genutzt worden.
 Siehe 
\family typewriter
\series bold
pubspec.yaml
\family default
\series default
 der Implementierung.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-12
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Verbotene Pakete
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Es sind keine Pakete, außer den erlaubten genutzt worden.
 Siehe 
\family typewriter
\series bold
pubspec.yaml
\family default
\series default
 der Implementierung.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
TF-13
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
No Sound
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Das Spiel hat keine Soundeffekte.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Nachweis der technischen Randbedingungen
\begin_inset CommandInset label
LatexCommand label
name "tab:Nachweis-der-technischen-Randbedingungen"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Verantwortlichkeiten im Projekt
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Sie müssen dokumentieren, welche Person für welche Projekt
 Ergebnisse verantwortlich war.
 Am besten machen Sie dies, indem sie relevante Assets identifizieren.
 Mittels einer Matrix lässt sich dann einfach dokumentieren, wer von Ihnen
  welche Assets verantwortlich und unterstützend erstellt hat.
 Dies kann bspw.
 wie nachfolgend gezeigt geschehen.
\end_layout

\begin_layout Plain Layout


\backslash
uline{
\backslash
textbf{Diese Angaben werden im Rahmen der individuellen Notenfindung herangezoge
n.}}
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="19" columns="7">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0col%">
<column alignment="left" valignment="top" width="0col%">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="center" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Komponente
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Detail
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Asset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Nane Kratzke
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Heinzel Mann
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rotate="90" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Heinzel Frau
\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Anmerkungen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Model
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Snake Game
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
lib/src/model.dart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
beinhaltelt Inline Dokumentation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Schlange
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
lib/src/model.dart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
beinhaltelt Inline Dokumentation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Maus
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
lib/src/model.dart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
beinhaltelt Inline Dokumentation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
View
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
HTML-Dokument
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
index.html
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Gestaltung
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
style.css
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
img/*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Viewlogik
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
lib/src/view.dart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
beinhaltelt Inline Dokumentation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Controller
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Eventhandling
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
lib/src/controller.dart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
beinhaltelt Inline Dokumentation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Parametrisierung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
gamekey.json
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Level
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
nicht umgesetzt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
GameKey API
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
REST Anbindung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
lib/src/gamekey.dart
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
beinhaltelt Inline Dokumentation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Documentation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
SnakeGame Report
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
doc/*.*
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Lyx/Latex Report
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
GameKey Service (Ruby)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Command Line Client
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
bin/gamekey
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
test command von Heinzel Frau
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Dockerization
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
Dockerfile
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Gamekey Server
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
lib/*.rb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
beinhaltelt Inline Dokumentation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Referencetests
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
lib/reference.rb
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
U
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
beinhaltet inline Dokumentation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Dokumentation
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size scriptsize
README.md
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
V
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size scriptsize
Online Dokumentation
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
V = verantwortlich (hauptdurchführend, kann nur einmal pro Zeile vergeben
 werden)
\end_layout

\begin_layout Plain Layout
U = unterstützend (Übernahme von Teilaufgaben)
\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Projektverantwortlichkeiten
\begin_inset CommandInset label
LatexCommand label
name "tab:Projektverantwortlichkeiten"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Bei der Dokumentation bietet es sich an, diese ggf.
 nochmals in Kapitel aufzuteilen, um sie besser Einzelpersonen zuordnen
 zu können.
 
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{framed}
\end_layout

\begin_layout Plain Layout


\backslash
textbf{Hinweis: } Wenn Sie eine Aufgabenzuordnung wählen, die im wesentlichen
 besagt, dass alle alles gemacht haben, zeigt das eigentlich nur, dass sie
 recht planlos agiert haben.
 Achten Sie darauf, dass die Verantwortlichkeiten und Unterstützungen gleichmäßi
g und fair im Projekt verteilt werden.
 Grundsätzlich bekommen alle im Team dieselbe Note, wenn sich jedoch Verantwortl
ichkeiten bei einer Person häufen, ist klar, dass diese die Hauptlast im
 Projekt getragen hat.
 Wenn Personen nur unterstützend tätig waren, ist klar, dass diese durch
 das Team mit durchgezogen wurden.
 
\backslash
uline{
\backslash
textbf{Solche Fälle haben natürlich Auswirkungen auf die Note!}}
\end_layout

\begin_layout Plain Layout

Im oben stehenden Fall ist recht deutlich, dass die Hauptlast wohl nicht
 Heinzel Mann und Heinzel Frau getragen haben.
\end_layout

\begin_layout Plain Layout


\backslash
end{framed}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
